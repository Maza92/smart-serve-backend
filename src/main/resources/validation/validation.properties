## CASH REGISTER VALIDATIONS
# initialAmount validations
validation.cash.register.initial.amount.notNull=The initial amount cannot be null.
validation.cash.register.initial.amount.min=The initial amount cannot be less than {min}.
validation.cash.register.initial.amount.max=The initial amount cannot be greater than {max}.
validation.cash.register.initial.amount.digits=The initial amount must have up to {integer} integer digits and {fraction} decimals.
validation.cash.register.initial.amount.positiveOrZero=The initial amount must be zero or positive.

# finalAmount validations
validation.cash.register.final.amount.notNull=The final amount cannot be null.
validation.cash.register.final.amount.min=The final amount cannot be less than {min}.
validation.cash.register.final.amount.max=The final amount cannot be greater than {max}.
validation.cash.register.final.amount.digits=The final amount must have up to {integer} integer digits and {fraction} decimals.
validation.cash.register.final.amount.positiveOrZero=The final amount must be zero or positive.

# expectedAmount validations
validation.cash.register.expected.amount.notNull=The expected amount cannot be null.
validation.cash.register.expected.amount.min=The expected amount cannot be less than {min}.
validation.cash.register.expected.amount.max=The expected amount cannot be greater than {max}.
validation.cash.register.expected.amount.digits=The expected amount must have up to {integer} integer digits and {fraction} decimals.
validation.cash.register.expected.amount.positiveOrZero=The expected amount must be zero or positive.
validation.cash.register.expected.amount.notBlank=The expected amount cannot be blank.

# notes validations
validation.cash.register.notes.notNull=Notes cannot be null.
validation.cash.register.notes.notBlank=Notes cannot be blank.
validation.cash.register.notes.size=Notes must be between {min} and {max} characters.
validation.cash.register.notes.pattern=Notes can only contain letters, numbers, and basic punctuation marks.
validation.cash.register.notes.example=Cash register for the morning shift

# restaurant table validations
validation.restaurant.table.number.notNull=The table number cannot be null.
validation.restaurant.table.number.min=The table number must be at least {value}.
validation.restaurant.table.number.max=The table number cannot be greater than {value}.
validation.restaurant.table.capacity.notNull=The table capacity cannot be null.
validation.restaurant.table.capacity.min=The table capacity must be at least {value}.
validation.restaurant.table.capacity.max=The table capacity cannot be greater than {value}.
validation.restaurant.table.status.notNull=The table status cannot be null.
validation.restaurant.table.status.notBlank=The table status cannot be blank.
validation.restaurant.table.status.size=The table status must be between {min} and {max} characters.
validation.restaurant.table.status.pattern=The table status must be one of: AVAILABLE, OCCUPIED, RESERVED.
validation.restaurant.table.section.size=The table section must not exceed {max} characters.
validation.restaurant.table.section.pattern=The table section can only contain letters, numbers, spaces, and hyphens.

validation.inventory.item.name.notBlank=Name is required.
validation.inventory.item.unit.notBlank=Unit is required.
validation.inventory.item.stockQuantity.notNull=Stock quantity is required.
validation.inventory.item.stockQuantity.positive=Stock quantity must be positive.
validation.inventory.item.unitCost.notNull=Unit cost is required.
validation.inventory.item.unitCost.positive=Unit cost must be positive.
validation.inventory.item.minStockLevel.notNull=Minimum stock level is required.
validation.inventory.item.minStockLevel.positive=Minimum stock level must be positive.
validation.inventory.item.supplierId.notNull=Supplier ID is required.
validation.inventory.item.imagePath.notBlank=Image path is required.

# supplier validations
validation.supplier.name.notBlank=Supplier name is required.
validation.supplier.contactPerson.notBlank=Contact person is required.
validation.supplier.phone.notBlank=Phone number is required.
validation.supplier.phone.pattern=Phone number format is invalid.
validation.supplier.email.notBlank=Email is required.
validation.supplier.email.pattern=Email format is invalid.
validation.supplier.address.notBlank=Address is required.

# recipe validations
validation.recipe.dishId.notNull=Dish ID is required.
validation.recipe.inventoryItemId.notNull=Inventory item ID is required.
validation.recipe.quantityRequired.notNull=Quantity required is required.
validation.recipe.quantityRequired.positive=Quantity required must be positive.
validation.recipe.notes.size=Notes must not exceed {max} characters.
validation.recipe.preparationOrder.notNull=Preparation order is required.
validation.recipe.preparationOrder.positive=Preparation order must be positive.

# dish validations
validation.dish.name.notBlank=Dish name is required.
validation.dish.name.size=Dish name must be between {min} and {max} characters.
validation.dish.description.notBlank=Description is required.
validation.dish.description.size=Description must not exceed {max} characters.
validation.dish.basePrice.notNull=Base price is required.
validation.dish.basePrice.positive=Base price must be positive.
validation.dish.category.notBlank=Category is required.
validation.dish.category.size=Category must not exceed {max} characters.
validation.dish.imageUrl.size=Image URL must not exceed {max} characters.
validation.dish.preparationTime.notNull=Preparation time is required.
validation.dish.preparationTime.positive=Preparation time must be positive.
validation.dish.ingredients.notEmpty=At least one ingredient is required.

# Inventory validations
validation.inventory.itemId.required=Inventory ID is required.
validation.inventory.movementType.required=Movement type is required.
validation.inventory.quantityChanged.required=Quantity changed is required.
validation.inventory.quantityChanged.min=Quantity changed must be greater than {min}.
validation.inventory.unitCostAtTime.required=Unit cost at time is required
validation.inventory.unitCostAtTime.min=Unit cost at time must be greater than {min}.
validation.inventory.reason.required=Reason is required.

validation.order.tableId.notNull=Table ID is required.
validation.order.tableId.positive=Table ID must be positive.
validation.order.status.notNull=Order status is required.
validation.order.customerName.notBlank=Customer name is required.
validation.order.customerName.size=Customer name must be between {min} and {max} characters.
validation.order.guestsCount.notNull=Guests count is required.
validation.order.guestsCount.positive=Guests count must be positive.
validation.order.guestsCount.max=Guests count cannot exceed {value} people.
validation.order.details.notEmpty=At least one order detail is required.

validation.order.detail.dishId.notNull=Dish ID is required.
validation.order.detail.dishId.positive=Dish ID must be positive.
validation.order.detail.quantity.notNull=Quantity is required.
validation.order.detail.quantity.positive=Quantity must be positive.
validation.order.detail.quantity.max=Quantity cannot exceed {value} items.
validation.order.detail.modifications.size=Modifications must not exceed {max} characters.
validation.order.detail.unitPrice.notNull=Unit price is required.
validation.order.detail.unitPrice.positive=Unit price must be positive.